package org.symphonyoss.integration.authentication.api.jwt;

/**
 * Service interface responsible for handling JWT authentication stuff.
 *
 * Created by rsanchez on 14/08/17.
 */
public interface JwtAuthentication {

  /**
   * Return user identifier from HTTP Authorization header.
   * @param authorizationHeader HTTP Authorization header
   * @return User identifier or null if the authorization header is not present or it's not a valid
   * JWT token
   */
  Long getUserIdFromAuthorizationHeader(String authorizationHeader);

  /**
   * Retrieves JWT token from HTTP Authorization header.
   * @param authorizationHeader HTTP Authorization header
   * @return JWT token or null if the authorization header is not present or it's not a valid JWT
   * token
   */
  String getJwtToken(String authorizationHeader);

  /**
   * Start the JWT authentication between the App and the SBE.
   * @param configurationId Application identifier.
   * @return The generated Application Token (Ta).
   */
  String authenticate(String configurationId);

  /**
   * Get the Symphony previously generated token by the app token
   * @param configurationId Application identifier.
   * @param applicationToken App token generated by the "authenticate" service.
   * @return The generated Token (Ta) and the SBE token (Ts).
   */
  boolean isValidTokenPair(String configurationId, String applicationToken,
      String symphonyToken);
}
